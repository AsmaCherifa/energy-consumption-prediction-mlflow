name: Energy Consumption Model Training

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at midnight UTC daily
  workflow_dispatch:      # Allow manual triggers

permissions:
  contents: write

jobs:
  train-model:
    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_URI: http://127.0.0.1:5000
      MODEL_VERSION: ${{ github.run_id }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install mlflow==2.8.1 scikit-learn pandas joblib

    - name: Create MLflow directory
      run: mkdir -p mlruns

    - name: Start MLflow server
      run: |
        mlflow server \
          --backend-store-uri sqlite:///mlruns/mlflow.db \
          --default-artifact-root ./mlruns \
          --host 0.0.0.0 &
        sleep 5

    - name: Run training
      run: |
        # Clean previous model
        if [ -f "best_model.pkl" ]; then
          rm -f best_model.pkl
          echo "Removed previous best_model.pkl"
        fi

        # Execute training
        python train_model.py

        # Verify model creation
        if [ ! -f "best_model.pkl" ]; then
          echo "ERROR: best_model.pkl not generated"
          exit 1
        fi

    - name: Get R2 score (accuracy) from CSV
      id: metrics
      run: |
        # Get header and first line of values
        HEADER=$(head -n1 comparison.csv)
        VALUES=$(sed -n 2p comparison.csv)

        # Convert them to arrays
        IFS=',' read -ra METRICS <<< "$HEADER"
        IFS=',' read -ra RESULTS <<< "$VALUES"

        # Find the index of R2
        for i in "${!METRICS[@]}"; do
          if [[ "${METRICS[$i]}" == "R2" ]]; then
            R2_INDEX=$i
            break
          fi
        done

        # Extract the R2 value
        ACCURACY=${RESULTS[$R2_INDEX]}
        echo "accuracy=$ACCURACY" >> $GITHUB_OUTPUT

    - name: Push model artifacts
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

        echo "mlruns/" >> .gitignore

        git add best_model.pkl comparison.csv encoder.pkl scaler.pkl

        if git diff-index --quiet HEAD --; then
          echo "No changes to commit"
        else
          git commit -m "[Automated] Update model artifacts ${{ github.run_id }}"
          git pull --rebase origin main
          git push origin main
        fi

    - name: Send email notification
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Energy Model Training - ${{ job.status }} (Run ${{ github.run_number }})"
        body: |
          ‚úÖ Model training completed successfully!
          
          Model version: ${{ env.MODEL_VERSION }}
          Accuracy (R¬≤): ${{ steps.metrics.outputs.accuracy }}

          üìÅ Artifacts generated:
          - best_model.pkl
          - comparison.csv

          View run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        to: ${{ secrets.EMAIL_USERNAME }}
        from: GitHub Actions

